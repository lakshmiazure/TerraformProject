# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: TerraformInstaller@0
  displayName: "Terraform Version"
  inputs:
    terraformVersion: 'latest'
- task: TerraformTaskV3@3
  displayName: "terraform init"
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'TerraformService'
    backendAzureRmResourceGroupName: 'TerraformRG'
    backendAzureRmStorageAccountName: 'terraformstoreage'
    backendAzureRmContainerName: 'terrformcontainer'
    backendAzureRmKey: 'tf/terraform.tfstate'
- task: TerraformTaskV3@3
  displayName: "terraform validate"
  inputs:
    provider: 'azurerm'
    command: 'validate'
- task: TerraformTaskV3@3
  displayName: "terraform plan"
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'TerraformService'
- task: TerraformTaskV3@3
  displayName: "terraform apply"
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'TerraformService'